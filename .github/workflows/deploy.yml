name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Manual trigger

env:
  NODE_VERSION: '20.x'

jobs:
  # Pre-deployment security checks
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for hardcoded secrets
        run: |
          if grep -r -i "password\|secret\|api.*key" src/ --exclude-dir=node_modules --include="*.ts" --include="*.vue" --include="*.js" | grep -v "// @ts-ignore\|@eslint-disable" > /dev/null; then
            echo "❌ Hardcoded secrets detected in source code"
            exit 1
          else
            echo "✅ No hardcoded secrets found"
          fi

  # Full test suite
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: security-audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linter
        run: npm run lint

      - name: Run unit tests
        run: npm run test

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  # Production deployment
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_APP_VERSION: ${{ github.sha }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

  # Post-deployment verification
  post-deploy:
    name: Post-deployment Checks
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Health check
        run: |
          echo "🏥 Performing health checks..."
          
          # Wait for deployment to be ready
          sleep 30
          
          # Check if site is responding
          if curl -f -s --max-time 30 https://castchat.vercel.app > /dev/null; then
            echo "✅ Site is accessible"
          else
            echo "❌ Site health check failed"
            exit 1
          fi

      - name: Performance audit with Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Notification
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy, post-deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ] && [ "${{ needs.post-deploy.result }}" == "success" ]; then
            echo "🚀 Deployment successful to production!"
            echo "🌐 Live at: https://castchat.vercel.app"
            echo "📊 Build: ${{ github.sha }}"
          else
            echo "❌ Deployment failed"
            exit 1
          fi